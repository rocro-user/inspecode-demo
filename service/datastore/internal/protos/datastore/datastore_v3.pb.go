// Code generated by protoc-gen-go.
// source: google.golang.org/appengine/internal/datastore/datastore_v3.proto
// DO NOT EDIT!

/*
Package datastore is a generated protocol buffer package.

It is generated from these files:
	google.golang.org/appengine/internal/datastore/datastore_v3.proto

It has these top-level messages:
	Action
	PropertyValue
	Property
	Path
	Reference
	User
	EntityProto
	CompositeProperty
	Index
	CompositeIndex
	IndexPostfix
	IndexPosition
	Snapshot
	InternalHeader
	Transaction
	Query
	CompiledQuery
	CompiledCursor
	Cursor
	Error
	Cost
	GetRequest
	GetResponse
	PutRequest
	PutResponse
	TouchRequest
	TouchResponse
	DeleteRequest
	DeleteResponse
	NextRequest
	QueryResult
	AllocateIdsRequest
	AllocateIdsResponse
	CompositeIndices
	AddActionsRequest
	AddActionsResponse
	BeginTransactionRequest
	CommitResponse
*/
package datastore

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PropertyMeaning int32

const (
	PropertyNOMEANING       PropertyMeaning = 0
	PropertyBLOB            PropertyMeaning = 14
	PropertyTEXT            PropertyMeaning = 15
	PropertyBYTESTRING      PropertyMeaning = 16
	PropertyATOMCATEGORY    PropertyMeaning = 1
	PropertyATOMLINK        PropertyMeaning = 2
	PropertyATOMTITLE       PropertyMeaning = 3
	PropertyATOMCONTENT     PropertyMeaning = 4
	PropertyATOMSUMMARY     PropertyMeaning = 5
	PropertyATOMAUTHOR      PropertyMeaning = 6
	PropertyGDWHEN          PropertyMeaning = 7
	PropertyGDEMAIL         PropertyMeaning = 8
	PropertyGEORSSPOINT     PropertyMeaning = 9
	PropertyGDIM            PropertyMeaning = 10
	PropertyGDPHONENUMBER   PropertyMeaning = 11
	PropertyGDPOSTALADDRESS PropertyMeaning = 12
	PropertyGDRATING        PropertyMeaning = 13
	PropertyBLOBKEY         PropertyMeaning = 17
	PropertyENTITYPROTO     PropertyMeaning = 19
	PropertyINDEXVALUE      PropertyMeaning = 18
)

var PropertyMeaningName = map[int32]string{
	0:  "NO_MEANING",
	14: "BLOB",
	15: "TEXT",
	16: "BYTESTRING",
	1:  "ATOM_CATEGORY",
	2:  "ATOM_LINK",
	3:  "ATOM_TITLE",
	4:  "ATOM_CONTENT",
	5:  "ATOM_SUMMARY",
	6:  "ATOM_AUTHOR",
	7:  "GD_WHEN",
	8:  "GD_EMAIL",
	9:  "GEORSS_POINT",
	10: "GD_IM",
	11: "GD_PHONENUMBER",
	12: "GD_POSTALADDRESS",
	13: "GD_RATING",
	17: "BLOBKEY",
	19: "ENTITY_PROTO",
	18: "INDEX_VALUE",
}
var PropertyMeaningValue = map[string]int32{
	"NO_MEANING":       0,
	"BLOB":             14,
	"TEXT":             15,
	"BYTESTRING":       16,
	"ATOM_CATEGORY":    1,
	"ATOM_LINK":        2,
	"ATOM_TITLE":       3,
	"ATOM_CONTENT":     4,
	"ATOM_SUMMARY":     5,
	"ATOM_AUTHOR":      6,
	"GD_WHEN":          7,
	"GD_EMAIL":         8,
	"GEORSS_POINT":     9,
	"GD_IM":            10,
	"GD_PHONENUMBER":   11,
	"GD_POSTALADDRESS": 12,
	"GD_RATING":        13,
	"BLOBKEY":          17,
	"ENTITY_PROTO":     19,
	"INDEX_VALUE":      18,
}

func (x PropertyMeaning) Enum() *PropertyMeaning {
	p := new(PropertyMeaning)
	*p = x
	return p
}
func (x PropertyMeaning) String() string {
	return proto.EnumName(PropertyMeaningName, int32(x))
}
func (x *PropertyMeaning) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PropertyMeaningValue, data, "Property_Meaning")
	if err != nil {
		return err
	}
	*x = PropertyMeaning(value)
	return nil
}

type PropertyFtsTokenizationOption int32

const (
	PropertyHTML PropertyFtsTokenizationOption = 1
	PropertyATOM PropertyFtsTokenizationOption = 2
)

var PropertyFtsTokenizationOptionName = map[int32]string{
	1: "HTML",
	2: "ATOM",
}
var PropertyFtsTokenizationOptionValue = map[string]int32{
	"HTML": 1,
	"ATOM": 2,
}

func (x PropertyFtsTokenizationOption) Enum() *PropertyFtsTokenizationOption {
	p := new(PropertyFtsTokenizationOption)
	*p = x
	return p
}
func (x PropertyFtsTokenizationOption) String() string {
	return proto.EnumName(PropertyFtsTokenizationOptionName, int32(x))
}
func (x *PropertyFtsTokenizationOption) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PropertyFtsTokenizationOptionValue, data, "Property_FtsTokenizationOption")
	if err != nil {
		return err
	}
	*x = PropertyFtsTokenizationOption(value)
	return nil
}

type EntityProtoKind int32

const (
	EntityProtoGDCONTACT EntityProtoKind = 1
	EntityProtoGDEVENT   EntityProtoKind = 2
	EntityProtoGDMESSAGE EntityProtoKind = 3
)

var EntityProtoKindName = map[int32]string{
	1: "GD_CONTACT",
	2: "GD_EVENT",
	3: "GD_MESSAGE",
}
var EntityProtoKindValue = map[string]int32{
	"GD_CONTACT": 1,
	"GD_EVENT":   2,
	"GD_MESSAGE": 3,
}

func (x EntityProtoKind) Enum() *EntityProtoKind {
	p := new(EntityProtoKind)
	*p = x
	return p
}
func (x EntityProtoKind) String() string {
	return proto.EnumName(EntityProtoKindName, int32(x))
}
func (x *EntityProtoKind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntityProtoKindValue, data, "EntityProto_Kind")
	if err != nil {
		return err
	}
	*x = EntityProtoKind(value)
	return nil
}

type IndexPropertyDirection int32

const (
	IndexPropertyASCENDING  IndexPropertyDirection = 1
	IndexPropertyDESCENDING IndexPropertyDirection = 2
)

var IndexPropertyDirectionName = map[int32]string{
	1: "ASCENDING",
	2: "DESCENDING",
}
var IndexPropertyDirectionValue = map[string]int32{
	"ASCENDING":  1,
	"DESCENDING": 2,
}

func (x IndexPropertyDirection) Enum() *IndexPropertyDirection {
	p := new(IndexPropertyDirection)
	*p = x
	return p
}
func (x IndexPropertyDirection) String() string {
	return proto.EnumName(IndexPropertyDirectionName, int32(x))
}
func (x *IndexPropertyDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IndexPropertyDirectionValue, data, "Index_Property_Direction")
	if err != nil {
		return err
	}
	*x = IndexPropertyDirection(value)
	return nil
}

type CompositeIndexState int32

const (
	CompositeIndexWRITEONLY CompositeIndexState = 1
	CompositeIndexREADWRITE CompositeIndexState = 2
	CompositeIndexDELETED   CompositeIndexState = 3
	CompositeIndexERROR     CompositeIndexState = 4
)

var CompositeIndexStateName = map[int32]string{
	1: "WRITE_ONLY",
	2: "READ_WRITE",
	3: "DELETED",
	4: "ERROR",
}
var CompositeIndexStateValue = map[string]int32{
	"WRITE_ONLY": 1,
	"READ_WRITE": 2,
	"DELETED":    3,
	"ERROR":      4,
}

func (x CompositeIndexState) Enum() *CompositeIndexState {
	p := new(CompositeIndexState)
	*p = x
	return p
}
func (x CompositeIndexState) String() string {
	return proto.EnumName(CompositeIndexStateName, int32(x))
}
func (x *CompositeIndexState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CompositeIndexStateValue, data, "CompositeIndex_State")
	if err != nil {
		return err
	}
	*x = CompositeIndexState(value)
	return nil
}

type SnapshotStatus int32

const (
	SnapshotINACTIVE SnapshotStatus = 0
	SnapshotACTIVE   SnapshotStatus = 1
)

var SnapshotStatusName = map[int32]string{
	0: "INACTIVE",
	1: "ACTIVE",
}
var SnapshotStatusValue = map[string]int32{
	"INACTIVE": 0,
	"ACTIVE":   1,
}

func (x SnapshotStatus) Enum() *SnapshotStatus {
	p := new(SnapshotStatus)
	*p = x
	return p
}
func (x SnapshotStatus) String() string {
	return proto.EnumName(SnapshotStatusName, int32(x))
}
func (x *SnapshotStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SnapshotStatusValue, data, "Snapshot_Status")
	if err != nil {
		return err
	}
	*x = SnapshotStatus(value)
	return nil
}

type QueryHint int32

const (
	QueryORDERFIRST    QueryHint = 1
	QueryANCESTORFIRST QueryHint = 2
	QueryFILTERFIRST   QueryHint = 3
)

var QueryHintName = map[int32]string{
	1: "ORDER_FIRST",
	2: "ANCESTOR_FIRST",
	3: "FILTER_FIRST",
}
var QueryHintValue = map[string]int32{
	"ORDER_FIRST":    1,
	"ANCESTOR_FIRST": 2,
	"FILTER_FIRST":   3,
}

func (x QueryHint) Enum() *QueryHint {
	p := new(QueryHint)
	*p = x
	return p
}
func (x QueryHint) String() string {
	return proto.EnumName(QueryHintName, int32(x))
}
func (x *QueryHint) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryHintValue, data, "Query_Hint")
	if err != nil {
		return err
	}
	*x = QueryHint(value)
	return nil
}

type QueryFilterOperator int32

const (
	QueryFilterLESSTHAN           QueryFilterOperator = 1
	QueryFilterLESSTHANOREQUAL    QueryFilterOperator = 2
	QueryFilterGREATERTHAN        QueryFilterOperator = 3
	QueryFilterGREATERTHANOREQUAL QueryFilterOperator = 4
	QueryFilterEQUAL              QueryFilterOperator = 5
	QueryFilterIN                 QueryFilterOperator = 6
	QueryFilterEXISTS             QueryFilterOperator = 7
)

var QueryFilterOperatorName = map[int32]string{
	1: "LESS_THAN",
	2: "LESS_THAN_OR_EQUAL",
	3: "GREATER_THAN",
	4: "GREATER_THAN_OR_EQUAL",
	5: "EQUAL",
	6: "IN",
	7: "EXISTS",
}
var QueryFilterOperatorValue = map[string]int32{
	"LESS_THAN":             1,
	"LESS_THAN_OR_EQUAL":    2,
	"GREATER_THAN":          3,
	"GREATER_THAN_OR_EQUAL": 4,
	"EQUAL":                 5,
	"IN":                    6,
	"EXISTS":                7,
}

func (x QueryFilterOperator) Enum() *QueryFilterOperator {
	p := new(QueryFilterOperator)
	*p = x
	return p
}
func (x QueryFilterOperator) String() string {
	return proto.EnumName(QueryFilterOperatorName, int32(x))
}
func (x *QueryFilterOperator) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryFilterOperatorValue, data, "Query_Filter_Operator")
	if err != nil {
		return err
	}
	*x = QueryFilterOperator(value)
	return nil
}

type QueryOrderDirection int32

const (
	QueryOrderASCENDING  QueryOrderDirection = 1
	QueryOrderDESCENDING QueryOrderDirection = 2
)

var QueryOrderDirectionName = map[int32]string{
	1: "ASCENDING",
	2: "DESCENDING",
}
var QueryOrderDirectionValue = map[string]int32{
	"ASCENDING":  1,
	"DESCENDING": 2,
}

func (x QueryOrderDirection) Enum() *QueryOrderDirection {
	p := new(QueryOrderDirection)
	*p = x
	return p
}
func (x QueryOrderDirection) String() string {
	return proto.EnumName(QueryOrderDirectionName, int32(x))
}
func (x *QueryOrderDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QueryOrderDirectionValue, data, "Query_Order_Direction")
	if err != nil {
		return err
	}
	*x = QueryOrderDirection(value)
	return nil
}

type ErrorErrorCode int32

const (
	ErrorBADREQUEST                ErrorErrorCode = 1
	ErrorCONCURRENTTRANSACTION     ErrorErrorCode = 2
	ErrorINTERNALERROR             ErrorErrorCode = 3
	ErrorNEEDINDEX                 ErrorErrorCode = 4
	ErrorTIMEOUT                   ErrorErrorCode = 5
	ErrorPERMISSIONDENIED          ErrorErrorCode = 6
	ErrorBIGTABLEERROR             ErrorErrorCode = 7
	ErrorCOMMITTEDBUTSTILLAPPLYING ErrorErrorCode = 8
	ErrorCAPABILITYDISABLED        ErrorErrorCode = 9
	ErrorTRYALTERNATEBACKEND       ErrorErrorCode = 10
	ErrorSAFETIMETOOOLD            ErrorErrorCode = 11
)

var ErrorErrorCodeName = map[int32]string{
	1:  "BAD_REQUEST",
	2:  "CONCURRENT_TRANSACTION",
	3:  "INTERNAL_ERROR",
	4:  "NEED_INDEX",
	5:  "TIMEOUT",
	6:  "PERMISSION_DENIED",
	7:  "BIGTABLE_ERROR",
	8:  "COMMITTED_BUT_STILL_APPLYING",
	9:  "CAPABILITY_DISABLED",
	10: "TRY_ALTERNATE_BACKEND",
	11: "SAFE_TIME_TOO_OLD",
}
var ErrorErrorCodeValue = map[string]int32{
	"BAD_REQUEST":                  1,
	"CONCURRENT_TRANSACTION":       2,
	"INTERNAL_ERROR":               3,
	"NEED_INDEX":                   4,
	"TIMEOUT":                      5,
	"PERMISSION_DENIED":            6,
	"BIGTABLE_ERROR":               7,
	"COMMITTED_BUT_STILL_APPLYING": 8,
	"CAPABILITY_DISABLED":          9,
	"TRY_ALTERNATE_BACKEND":        10,
	"SAFE_TIME_TOO_OLD":            11,
}

func (x ErrorErrorCode) Enum() *ErrorErrorCode {
	p := new(ErrorErrorCode)
	*p = x
	return p
}
func (x ErrorErrorCode) String() string {
	return proto.EnumName(ErrorErrorCodeName, int32(x))
}
func (x *ErrorErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorErrorCodeValue, data, "Error_ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorErrorCode(value)
	return nil
}

type PutRequestAutoIDPolicy int32

const (
	PutRequestCURRENT    PutRequestAutoIDPolicy = 0
	PutRequestSEQUENTIAL PutRequestAutoIDPolicy = 1
)

var PutRequestAutoIDPolicyName = map[int32]string{
	0: "CURRENT",
	1: "SEQUENTIAL",
}
var PutRequestAutoIDPolicyValue = map[string]int32{
	"CURRENT":    0,
	"SEQUENTIAL": 1,
}

func (x PutRequestAutoIDPolicy) Enum() *PutRequestAutoIDPolicy {
	p := new(PutRequestAutoIDPolicy)
	*p = x
	return p
}
func (x PutRequestAutoIDPolicy) String() string {
	return proto.EnumName(PutRequestAutoIDPolicyName, int32(x))
}
func (x *PutRequestAutoIDPolicy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PutRequestAutoIDPolicyValue, data, "PutRequest_AutoIdPolicy")
	if err != nil {
		return err
	}
	*x = PutRequestAutoIDPolicy(value)
	return nil
}

type Action struct {
	XXXUnrecognized []byte `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}

type PropertyValue struct {
	Int64Value      *int64                       `protobuf:"varint,1,opt,name=int64Value" json:"int64Value,omitempty"`
	BooleanValue    *bool                        `protobuf:"varint,2,opt,name=booleanValue" json:"booleanValue,omitempty"`
	StringValue     *string                      `protobuf:"bytes,3,opt,name=stringValue" json:"stringValue,omitempty"`
	DoubleValue     *float64                     `protobuf:"fixed64,4,opt,name=doubleValue" json:"doubleValue,omitempty"`
	Pointvalue      *PropertyValuePointValue     `protobuf:"group,5,opt,name=PointValue" json:"pointvalue,omitempty"`
	Uservalue       *PropertyValueUserValue      `protobuf:"group,8,opt,name=UserValue" json:"uservalue,omitempty"`
	Referencevalue  *PropertyValueReferenceValue `protobuf:"group,12,opt,name=ReferenceValue" json:"referencevalue,omitempty"`
	XXXUnrecognized []byte                       `json:"-"`
}

func (m *PropertyValue) Reset()         { *m = PropertyValue{} }
func (m *PropertyValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValue) ProtoMessage()    {}

func (m *PropertyValue) GetInt64Value() int64 {
	if m != nil && m.Int64Value != nil {
		return *m.Int64Value
	}
	return 0
}

func (m *PropertyValue) GetBooleanValue() bool {
	if m != nil && m.BooleanValue != nil {
		return *m.BooleanValue
	}
	return false
}

func (m *PropertyValue) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *PropertyValue) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *PropertyValue) GetPointvalue() *PropertyValuePointValue {
	if m != nil {
		return m.Pointvalue
	}
	return nil
}

func (m *PropertyValue) GetUservalue() *PropertyValueUserValue {
	if m != nil {
		return m.Uservalue
	}
	return nil
}

func (m *PropertyValue) GetReferencevalue() *PropertyValueReferenceValue {
	if m != nil {
		return m.Referencevalue
	}
	return nil
}

type PropertyValuePointValue struct {
	X               *float64 `protobuf:"fixed64,6,req,name=x" json:"x,omitempty"`
	Y               *float64 `protobuf:"fixed64,7,req,name=y" json:"y,omitempty"`
	XXXUnrecognized []byte   `json:"-"`
}

func (m *PropertyValuePointValue) Reset()         { *m = PropertyValuePointValue{} }
func (m *PropertyValuePointValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValuePointValue) ProtoMessage()    {}

func (m *PropertyValuePointValue) GetX() float64 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *PropertyValuePointValue) GetY() float64 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type PropertyValueUserValue struct {
	Email             *string `protobuf:"bytes,9,req,name=email" json:"email,omitempty"`
	AuthDomain        *string `protobuf:"bytes,10,req,name=auth_domain" json:"auth_domain,omitempty"`
	Nickname          *string `protobuf:"bytes,11,opt,name=nickname" json:"nickname,omitempty"`
	FederatedIdentity *string `protobuf:"bytes,21,opt,name=federated_identity" json:"federated_identity,omitempty"`
	FederatedProvider *string `protobuf:"bytes,22,opt,name=federated_provider" json:"federated_provider,omitempty"`
	XXXUnrecognized   []byte  `json:"-"`
}

func (m *PropertyValueUserValue) Reset()         { *m = PropertyValueUserValue{} }
func (m *PropertyValueUserValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValueUserValue) ProtoMessage()    {}

func (m *PropertyValueUserValue) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *PropertyValueUserValue) GetAuthDomain() string {
	if m != nil && m.AuthDomain != nil {
		return *m.AuthDomain
	}
	return ""
}

func (m *PropertyValueUserValue) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *PropertyValueUserValue) GetFederatedIdentity() string {
	if m != nil && m.FederatedIdentity != nil {
		return *m.FederatedIdentity
	}
	return ""
}

func (m *PropertyValueUserValue) GetFederatedProvider() string {
	if m != nil && m.FederatedProvider != nil {
		return *m.FederatedProvider
	}
	return ""
}

type PropertyValueReferenceValue struct {
	App             *string                                   `protobuf:"bytes,13,req,name=app" json:"app,omitempty"`
	NameSpace       *string                                   `protobuf:"bytes,20,opt,name=name_space" json:"name_space,omitempty"`
	Pathelement     []*PropertyValueReferenceValuePathElement `protobuf:"group,14,rep,name=PathElement" json:"pathelement,omitempty"`
	XXXUnrecognized []byte                                    `json:"-"`
}

func (m *PropertyValueReferenceValue) Reset()         { *m = PropertyValueReferenceValue{} }
func (m *PropertyValueReferenceValue) String() string { return proto.CompactTextString(m) }
func (*PropertyValueReferenceValue) ProtoMessage()    {}

func (m *PropertyValueReferenceValue) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *PropertyValueReferenceValue) GetNameSpace() string {
	if m != nil && m.NameSpace != nil {
		return *m.NameSpace
	}
	return ""
}

func (m *PropertyValueReferenceValue) GetPathelement() []*PropertyValueReferenceValuePathElement {
	if m != nil {
		return m.Pathelement
	}
	return nil
}

type PropertyValueReferenceValuePathElement struct {
	Type            *string `protobuf:"bytes,15,req,name=type" json:"type,omitempty"`
	ID              *int64  `protobuf:"varint,16,opt,name=id" json:"id,omitempty"`
	Name            *string `protobuf:"bytes,17,opt,name=name" json:"name,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *PropertyValueReferenceValuePathElement) Reset() {
	*m = PropertyValueReferenceValuePathElement{}
}
func (m *PropertyValueReferenceValuePathElement) String() string { return proto.CompactTextString(m) }
func (*PropertyValueReferenceValuePathElement) ProtoMessage()    {}

func (m *PropertyValueReferenceValuePathElement) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PropertyValueReferenceValuePathElement) GetID() int64 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *PropertyValueReferenceValuePathElement) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Property struct {
	Meaning               *PropertyMeaning               `protobuf:"varint,1,opt,name=meaning,enum=appengine.Property_Meaning,def=0" json:"meaning,omitempty"`
	MeaningURI            *string                        `protobuf:"bytes,2,opt,name=meaning_uri" json:"meaning_uri,omitempty"`
	Name                  *string                        `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Value                 *PropertyValue                 `protobuf:"bytes,5,req,name=value" json:"value,omitempty"`
	Multiple              *bool                          `protobuf:"varint,4,req,name=multiple" json:"multiple,omitempty"`
	Searchable            *bool                          `protobuf:"varint,6,opt,name=searchable,def=0" json:"searchable,omitempty"`
	FtsTokenizationOption *PropertyFtsTokenizationOption `protobuf:"varint,8,opt,name=fts_tokenization_option,enum=appengine.Property_FtsTokenizationOption" json:"fts_tokenization_option,omitempty"`
	Locale                *string                        `protobuf:"bytes,9,opt,name=locale,def=en" json:"locale,omitempty"`
	XXXUnrecognized       []byte                         `json:"-"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}

const DefaultPropertyMeaning PropertyMeaning = PropertyNOMEANING
const DefaultPropertySearchable bool = false
const DefaultPropertyLocale string = "en"

func (m *Property) GetMeaning() PropertyMeaning {
	if m != nil && m.Meaning != nil {
		return *m.Meaning
	}
	return DefaultPropertyMeaning
}

func (m *Property) GetMeaningURI() string {
	if m != nil && m.MeaningURI != nil {
		return *m.MeaningURI
	}
	return ""
}

func (m *Property) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Property) GetValue() *PropertyValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Property) GetMultiple() bool {
	if m != nil && m.Multiple != nil {
		return *m.Multiple
	}
	return false
}

func (m *Property) GetSearchable() bool {
	if m != nil && m.Searchable != nil {
		return *m.Searchable
	}
	return DefaultPropertySearchable
}

func (m *Property) GetFtsTokenizationOption() PropertyFtsTokenizationOption {
	if m != nil && m.FtsTokenizationOption != nil {
		return *m.FtsTokenizationOption
	}
	return PropertyHTML
}

func (m *Property) GetLocale() string {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return DefaultPropertyLocale
}

type Path struct {
	Element         []*PathElement `protobuf:"group,1,rep" json:"element,omitempty"`
	XXXUnrecognized []byte         `json:"-"`
}

func (m *Path) Reset()         { *m = Path{} }
func (m *Path) String() string { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()    {}

func (m *Path) GetElement() []*PathElement {
	if m != nil {
		return m.Element
	}
	return nil
}

type PathElement struct {
	Type            *string `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	ID              *int64  `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Name            *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *PathElement) Reset()         { *m = PathElement{} }
func (m *PathElement) String() string { return proto.CompactTextString(m) }
func (*PathElement) ProtoMessage()    {}

func (m *PathElement) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PathElement) GetID() int64 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *PathElement) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Reference struct {
	App             *string `protobuf:"bytes,13,req,name=app" json:"app,omitempty"`
	NameSpace       *string `protobuf:"bytes,20,opt,name=name_space" json:"name_space,omitempty"`
	Path            *Path   `protobuf:"bytes,14,req,name=path" json:"path,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}

func (m *Reference) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *Reference) GetNameSpace() string {
	if m != nil && m.NameSpace != nil {
		return *m.NameSpace
	}
	return ""
}

func (m *Reference) GetPath() *Path {
	if m != nil {
		return m.Path
	}
	return nil
}

type User struct {
	Email             *string `protobuf:"bytes,1,req,name=email" json:"email,omitempty"`
	AuthDomain        *string `protobuf:"bytes,2,req,name=auth_domain" json:"auth_domain,omitempty"`
	Nickname          *string `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	FederatedIdentity *string `protobuf:"bytes,6,opt,name=federated_identity" json:"federated_identity,omitempty"`
	FederatedProvider *string `protobuf:"bytes,7,opt,name=federated_provider" json:"federated_provider,omitempty"`
	XXXUnrecognized   []byte  `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

func (m *User) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

func (m *User) GetAuthDomain() string {
	if m != nil && m.AuthDomain != nil {
		return *m.AuthDomain
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *User) GetFederatedIdentity() string {
	if m != nil && m.FederatedIdentity != nil {
		return *m.FederatedIdentity
	}
	return ""
}

func (m *User) GetFederatedProvider() string {
	if m != nil && m.FederatedProvider != nil {
		return *m.FederatedProvider
	}
	return ""
}

type EntityProto struct {
	Key             *Reference       `protobuf:"bytes,13,req,name=key" json:"key,omitempty"`
	EntityGroup     *Path            `protobuf:"bytes,16,req,name=entity_group" json:"entity_group,omitempty"`
	Owner           *User            `protobuf:"bytes,17,opt,name=owner" json:"owner,omitempty"`
	Kind            *EntityProtoKind `protobuf:"varint,4,opt,name=kind,enum=appengine.EntityProto_Kind" json:"kind,omitempty"`
	KindURI         *string          `protobuf:"bytes,5,opt,name=kind_uri" json:"kind_uri,omitempty"`
	Property        []*Property      `protobuf:"bytes,14,rep,name=property" json:"property,omitempty"`
	RawProperty     []*Property      `protobuf:"bytes,15,rep,name=raw_property" json:"raw_property,omitempty"`
	Rank            *int32           `protobuf:"varint,18,opt,name=rank" json:"rank,omitempty"`
	XXXUnrecognized []byte           `json:"-"`
}

func (m *EntityProto) Reset()         { *m = EntityProto{} }
func (m *EntityProto) String() string { return proto.CompactTextString(m) }
func (*EntityProto) ProtoMessage()    {}

func (m *EntityProto) GetKey() *Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *EntityProto) GetEntityGroup() *Path {
	if m != nil {
		return m.EntityGroup
	}
	return nil
}

func (m *EntityProto) GetOwner() *User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *EntityProto) GetKind() EntityProtoKind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return EntityProtoGDCONTACT
}

func (m *EntityProto) GetKindURI() string {
	if m != nil && m.KindURI != nil {
		return *m.KindURI
	}
	return ""
}

func (m *EntityProto) GetProperty() []*Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *EntityProto) GetRawProperty() []*Property {
	if m != nil {
		return m.RawProperty
	}
	return nil
}

func (m *EntityProto) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

type CompositeProperty struct {
	IndexID         *int64   `protobuf:"varint,1,req,name=index_id" json:"index_id,omitempty"`
	Value           []string `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
	XXXUnrecognized []byte   `json:"-"`
}

func (m *CompositeProperty) Reset()         { *m = CompositeProperty{} }
func (m *CompositeProperty) String() string { return proto.CompactTextString(m) }
func (*CompositeProperty) ProtoMessage()    {}

func (m *CompositeProperty) GetIndexID() int64 {
	if m != nil && m.IndexID != nil {
		return *m.IndexID
	}
	return 0
}

func (m *CompositeProperty) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type Index struct {
	EntityType      *string          `protobuf:"bytes,1,req,name=entity_type" json:"entity_type,omitempty"`
	Ancestor        *bool            `protobuf:"varint,5,req,name=ancestor" json:"ancestor,omitempty"`
	Property        []*IndexProperty `protobuf:"group,2,rep" json:"property,omitempty"`
	XXXUnrecognized []byte           `json:"-"`
}

func (m *Index) Reset()         { *m = Index{} }
func (m *Index) String() string { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()    {}

func (m *Index) GetEntityType() string {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return ""
}

func (m *Index) GetAncestor() bool {
	if m != nil && m.Ancestor != nil {
		return *m.Ancestor
	}
	return false
}

func (m *Index) GetProperty() []*IndexProperty {
	if m != nil {
		return m.Property
	}
	return nil
}

type IndexProperty struct {
	Name            *string                 `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Direction       *IndexPropertyDirection `protobuf:"varint,4,opt,name=direction,enum=appengine.Index_Property_Direction,def=1" json:"direction,omitempty"`
	XXXUnrecognized []byte                  `json:"-"`
}

func (m *IndexProperty) Reset()         { *m = IndexProperty{} }
func (m *IndexProperty) String() string { return proto.CompactTextString(m) }
func (*IndexProperty) ProtoMessage()    {}

const DefaultIndexPropertyDirection IndexPropertyDirection = IndexPropertyASCENDING

func (m *IndexProperty) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *IndexProperty) GetDirection() IndexPropertyDirection {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return DefaultIndexPropertyDirection
}

type CompositeIndex struct {
	AppID             *string              `protobuf:"bytes,1,req,name=app_id" json:"app_id,omitempty"`
	ID                *int64               `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Definition        *Index               `protobuf:"bytes,3,req,name=definition" json:"definition,omitempty"`
	State             *CompositeIndexState `protobuf:"varint,4,req,name=state,enum=appengine.CompositeIndex_State" json:"state,omitempty"`
	OnlyUseIfRequired *bool                `protobuf:"varint,6,opt,name=only_use_if_required,def=0" json:"only_use_if_required,omitempty"`
	XXXUnrecognized   []byte               `json:"-"`
}

func (m *CompositeIndex) Reset()         { *m = CompositeIndex{} }
func (m *CompositeIndex) String() string { return proto.CompactTextString(m) }
func (*CompositeIndex) ProtoMessage()    {}

const DefaultCompositeIndexOnlyUseIfRequired bool = false

func (m *CompositeIndex) GetAppID() string {
	if m != nil && m.AppID != nil {
		return *m.AppID
	}
	return ""
}

func (m *CompositeIndex) GetID() int64 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

func (m *CompositeIndex) GetDefinition() *Index {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *CompositeIndex) GetState() CompositeIndexState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return CompositeIndexWRITEONLY
}

func (m *CompositeIndex) GetOnlyUseIfRequired() bool {
	if m != nil && m.OnlyUseIfRequired != nil {
		return *m.OnlyUseIfRequired
	}
	return DefaultCompositeIndexOnlyUseIfRequired
}

type IndexPostfix struct {
	IndexValue      []*IndexPostfixIndexValue `protobuf:"bytes,1,rep,name=index_value" json:"index_value,omitempty"`
	Key             *Reference                `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Before          *bool                     `protobuf:"varint,3,opt,name=before,def=1" json:"before,omitempty"`
	XXXUnrecognized []byte                    `json:"-"`
}

func (m *IndexPostfix) Reset()         { *m = IndexPostfix{} }
func (m *IndexPostfix) String() string { return proto.CompactTextString(m) }
func (*IndexPostfix) ProtoMessage()    {}

const DefaultIndexPostfixBefore bool = true

func (m *IndexPostfix) GetIndexValue() []*IndexPostfixIndexValue {
	if m != nil {
		return m.IndexValue
	}
	return nil
}

func (m *IndexPostfix) GetKey() *Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *IndexPostfix) GetBefore() bool {
	if m != nil && m.Before != nil {
		return *m.Before
	}
	return DefaultIndexPostfixBefore
}

type IndexPostfixIndexValue struct {
	PropertyName    *string        `protobuf:"bytes,1,req,name=property_name" json:"property_name,omitempty"`
	Value           *PropertyValue `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXXUnrecognized []byte         `json:"-"`
}

func (m *IndexPostfixIndexValue) Reset()         { *m = IndexPostfixIndexValue{} }
func (m *IndexPostfixIndexValue) String() string { return proto.CompactTextString(m) }
func (*IndexPostfixIndexValue) ProtoMessage()    {}

func (m *IndexPostfixIndexValue) GetPropertyName() string {
	if m != nil && m.PropertyName != nil {
		return *m.PropertyName
	}
	return ""
}

func (m *IndexPostfixIndexValue) GetValue() *PropertyValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type IndexPosition struct {
	Key             *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Before          *bool   `protobuf:"varint,2,opt,name=before,def=1" json:"before,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *IndexPosition) Reset()         { *m = IndexPosition{} }
func (m *IndexPosition) String() string { return proto.CompactTextString(m) }
func (*IndexPosition) ProtoMessage()    {}

const DefaultIndexPositionBefore bool = true

func (m *IndexPosition) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *IndexPosition) GetBefore() bool {
	if m != nil && m.Before != nil {
		return *m.Before
	}
	return DefaultIndexPositionBefore
}

type Snapshot struct {
	Ts              *int64 `protobuf:"varint,1,req,name=ts" json:"ts,omitempty"`
	XXXUnrecognized []byte `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}

func (m *Snapshot) GetTs() int64 {
	if m != nil && m.Ts != nil {
		return *m.Ts
	}
	return 0
}

type InternalHeader struct {
	Qos             *string `protobuf:"bytes,1,opt,name=qos" json:"qos,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *InternalHeader) Reset()         { *m = InternalHeader{} }
func (m *InternalHeader) String() string { return proto.CompactTextString(m) }
func (*InternalHeader) ProtoMessage()    {}

func (m *InternalHeader) GetQos() string {
	if m != nil && m.Qos != nil {
		return *m.Qos
	}
	return ""
}

type Transaction struct {
	Header          *InternalHeader `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	Handle          *uint64         `protobuf:"fixed64,1,req,name=handle" json:"handle,omitempty"`
	App             *string         `protobuf:"bytes,2,req,name=app" json:"app,omitempty"`
	MarkChanges     *bool           `protobuf:"varint,3,opt,name=mark_changes,def=0" json:"mark_changes,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}

const DefaultTransactionMarkChanges bool = false

func (m *Transaction) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Transaction) GetHandle() uint64 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *Transaction) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *Transaction) GetMarkChanges() bool {
	if m != nil && m.MarkChanges != nil {
		return *m.MarkChanges
	}
	return DefaultTransactionMarkChanges
}

type Query struct {
	Header              *InternalHeader   `protobuf:"bytes,39,opt,name=header" json:"header,omitempty"`
	App                 *string           `protobuf:"bytes,1,req,name=app" json:"app,omitempty"`
	NameSpace           *string           `protobuf:"bytes,29,opt,name=name_space" json:"name_space,omitempty"`
	Kind                *string           `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	Ancestor            *Reference        `protobuf:"bytes,17,opt,name=ancestor" json:"ancestor,omitempty"`
	Filter              []*QueryFilter    `protobuf:"group,4,rep" json:"filter,omitempty"`
	SearchQuery         *string           `protobuf:"bytes,8,opt,name=search_query" json:"search_query,omitempty"`
	Order               []*QueryOrder     `protobuf:"group,9,rep" json:"order,omitempty"`
	Hint                *QueryHint        `protobuf:"varint,18,opt,name=hint,enum=appengine.Query_Hint" json:"hint,omitempty"`
	Count               *int32            `protobuf:"varint,23,opt,name=count" json:"count,omitempty"`
	Offset              *int32            `protobuf:"varint,12,opt,name=offset,def=0" json:"offset,omitempty"`
	Limit               *int32            `protobuf:"varint,16,opt,name=limit" json:"limit,omitempty"`
	CompiledCursor      *CompiledCursor   `protobuf:"bytes,30,opt,name=compiled_cursor" json:"compiled_cursor,omitempty"`
	EndCompiledCursor   *CompiledCursor   `protobuf:"bytes,31,opt,name=end_compiled_cursor" json:"end_compiled_cursor,omitempty"`
	CompositeIndex      []*CompositeIndex `protobuf:"bytes,19,rep,name=composite_index" json:"composite_index,omitempty"`
	RequirePerfectPlan  *bool             `protobuf:"varint,20,opt,name=require_perfect_plan,def=0" json:"require_perfect_plan,omitempty"`
	KeysOnly            *bool             `protobuf:"varint,21,opt,name=keys_only,def=0" json:"keys_only,omitempty"`
	Transaction         *Transaction      `protobuf:"bytes,22,opt,name=transaction" json:"transaction,omitempty"`
	Compile             *bool             `protobuf:"varint,25,opt,name=compile,def=0" json:"compile,omitempty"`
	FailoverMs          *int64            `protobuf:"varint,26,opt,name=failover_ms" json:"failover_ms,omitempty"`
	Strong              *bool             `protobuf:"varint,32,opt,name=strong" json:"strong,omitempty"`
	PropertyName        []string          `protobuf:"bytes,33,rep,name=property_name" json:"property_name,omitempty"`
	GroupByPropertyName []string          `protobuf:"bytes,34,rep,name=group_by_property_name" json:"group_by_property_name,omitempty"`
	Distinct            *bool             `protobuf:"varint,24,opt,name=distinct" json:"distinct,omitempty"`
	MinSafeTimeSeconds  *int64            `protobuf:"varint,35,opt,name=min_safe_time_seconds" json:"min_safe_time_seconds,omitempty"`
	SafeReplicaName     []string          `protobuf:"bytes,36,rep,name=safe_replica_name" json:"safe_replica_name,omitempty"`
	PersistOffset       *bool             `protobuf:"varint,37,opt,name=persist_offset,def=0" json:"persist_offset,omitempty"`
	XXXUnrecognized     []byte            `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}

const DefaultQueryOffset int32 = 0
const DefaultQueryRequirePerfectPlan bool = false
const DefaultQueryKeysOnly bool = false
const DefaultQueryCompile bool = false
const DefaultQueryPersistOffset bool = false

func (m *Query) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Query) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *Query) GetNameSpace() string {
	if m != nil && m.NameSpace != nil {
		return *m.NameSpace
	}
	return ""
}

func (m *Query) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *Query) GetAncestor() *Reference {
	if m != nil {
		return m.Ancestor
	}
	return nil
}

func (m *Query) GetFilter() []*QueryFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Query) GetSearchQuery() string {
	if m != nil && m.SearchQuery != nil {
		return *m.SearchQuery
	}
	return ""
}

func (m *Query) GetOrder() []*QueryOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *Query) GetHint() QueryHint {
	if m != nil && m.Hint != nil {
		return *m.Hint
	}
	return QueryORDERFIRST
}

func (m *Query) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Query) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return DefaultQueryOffset
}

func (m *Query) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *Query) GetCompiledCursor() *CompiledCursor {
	if m != nil {
		return m.CompiledCursor
	}
	return nil
}

func (m *Query) GetEndCompiledCursor() *CompiledCursor {
	if m != nil {
		return m.EndCompiledCursor
	}
	return nil
}

func (m *Query) GetCompositeIndex() []*CompositeIndex {
	if m != nil {
		return m.CompositeIndex
	}
	return nil
}

func (m *Query) GetRequirePerfectPlan() bool {
	if m != nil && m.RequirePerfectPlan != nil {
		return *m.RequirePerfectPlan
	}
	return DefaultQueryRequirePerfectPlan
}

func (m *Query) GetKeysOnly() bool {
	if m != nil && m.KeysOnly != nil {
		return *m.KeysOnly
	}
	return DefaultQueryKeysOnly
}

func (m *Query) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *Query) GetCompile() bool {
	if m != nil && m.Compile != nil {
		return *m.Compile
	}
	return DefaultQueryCompile
}

func (m *Query) GetFailoverMs() int64 {
	if m != nil && m.FailoverMs != nil {
		return *m.FailoverMs
	}
	return 0
}

func (m *Query) GetStrong() bool {
	if m != nil && m.Strong != nil {
		return *m.Strong
	}
	return false
}

func (m *Query) GetPropertyName() []string {
	if m != nil {
		return m.PropertyName
	}
	return nil
}

func (m *Query) GetGroupByPropertyName() []string {
	if m != nil {
		return m.GroupByPropertyName
	}
	return nil
}

func (m *Query) GetDistinct() bool {
	if m != nil && m.Distinct != nil {
		return *m.Distinct
	}
	return false
}

func (m *Query) GetMinSafeTimeSeconds() int64 {
	if m != nil && m.MinSafeTimeSeconds != nil {
		return *m.MinSafeTimeSeconds
	}
	return 0
}

func (m *Query) GetSafeReplicaName() []string {
	if m != nil {
		return m.SafeReplicaName
	}
	return nil
}

func (m *Query) GetPersistOffset() bool {
	if m != nil && m.PersistOffset != nil {
		return *m.PersistOffset
	}
	return DefaultQueryPersistOffset
}

type QueryFilter struct {
	Op              *QueryFilterOperator `protobuf:"varint,6,req,name=op,enum=appengine.Query_Filter_Operator" json:"op,omitempty"`
	Property        []*Property          `protobuf:"bytes,14,rep,name=property" json:"property,omitempty"`
	XXXUnrecognized []byte               `json:"-"`
}

func (m *QueryFilter) Reset()         { *m = QueryFilter{} }
func (m *QueryFilter) String() string { return proto.CompactTextString(m) }
func (*QueryFilter) ProtoMessage()    {}

func (m *QueryFilter) GetOp() QueryFilterOperator {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return QueryFilterLESSTHAN
}

func (m *QueryFilter) GetProperty() []*Property {
	if m != nil {
		return m.Property
	}
	return nil
}

type QueryOrder struct {
	Property        *string              `protobuf:"bytes,10,req,name=property" json:"property,omitempty"`
	Direction       *QueryOrderDirection `protobuf:"varint,11,opt,name=direction,enum=appengine.Query_Order_Direction,def=1" json:"direction,omitempty"`
	XXXUnrecognized []byte               `json:"-"`
}

func (m *QueryOrder) Reset()         { *m = QueryOrder{} }
func (m *QueryOrder) String() string { return proto.CompactTextString(m) }
func (*QueryOrder) ProtoMessage()    {}

const DefaultQueryOrderDirection QueryOrderDirection = QueryOrderASCENDING

func (m *QueryOrder) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *QueryOrder) GetDirection() QueryOrderDirection {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return DefaultQueryOrderDirection
}

type CompiledQuery struct {
	Primaryscan       *CompiledQueryPrimaryScan     `protobuf:"group,1,req,name=PrimaryScan" json:"primaryscan,omitempty"`
	Mergejoinscan     []*CompiledQueryMergeJoinScan `protobuf:"group,7,rep,name=MergeJoinScan" json:"mergejoinscan,omitempty"`
	IndexDef          *Index                        `protobuf:"bytes,21,opt,name=index_def" json:"index_def,omitempty"`
	Offset            *int32                        `protobuf:"varint,10,opt,name=offset,def=0" json:"offset,omitempty"`
	Limit             *int32                        `protobuf:"varint,11,opt,name=limit" json:"limit,omitempty"`
	KeysOnly          *bool                         `protobuf:"varint,12,req,name=keys_only" json:"keys_only,omitempty"`
	PropertyName      []string                      `protobuf:"bytes,24,rep,name=property_name" json:"property_name,omitempty"`
	DistinctInfixSize *int32                        `protobuf:"varint,25,opt,name=distinct_infix_size" json:"distinct_infix_size,omitempty"`
	Entityfilter      *CompiledQueryEntityFilter    `protobuf:"group,13,opt,name=EntityFilter" json:"entityfilter,omitempty"`
	XXXUnrecognized   []byte                        `json:"-"`
}

func (m *CompiledQuery) Reset()         { *m = CompiledQuery{} }
func (m *CompiledQuery) String() string { return proto.CompactTextString(m) }
func (*CompiledQuery) ProtoMessage()    {}

const DefaultCompiledQueryOffset int32 = 0

func (m *CompiledQuery) GetPrimaryscan() *CompiledQueryPrimaryScan {
	if m != nil {
		return m.Primaryscan
	}
	return nil
}

func (m *CompiledQuery) GetMergejoinscan() []*CompiledQueryMergeJoinScan {
	if m != nil {
		return m.Mergejoinscan
	}
	return nil
}

func (m *CompiledQuery) GetIndexDef() *Index {
	if m != nil {
		return m.IndexDef
	}
	return nil
}

func (m *CompiledQuery) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return DefaultCompiledQueryOffset
}

func (m *CompiledQuery) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *CompiledQuery) GetKeysOnly() bool {
	if m != nil && m.KeysOnly != nil {
		return *m.KeysOnly
	}
	return false
}

func (m *CompiledQuery) GetPropertyName() []string {
	if m != nil {
		return m.PropertyName
	}
	return nil
}

func (m *CompiledQuery) GetDistinctInfixSize() int32 {
	if m != nil && m.DistinctInfixSize != nil {
		return *m.DistinctInfixSize
	}
	return 0
}

func (m *CompiledQuery) GetEntityfilter() *CompiledQueryEntityFilter {
	if m != nil {
		return m.Entityfilter
	}
	return nil
}

type CompiledQueryPrimaryScan struct {
	IndexName                  *string  `protobuf:"bytes,2,opt,name=index_name" json:"index_name,omitempty"`
	StartKey                   *string  `protobuf:"bytes,3,opt,name=start_key" json:"start_key,omitempty"`
	StartInclusive             *bool    `protobuf:"varint,4,opt,name=start_inclusive" json:"start_inclusive,omitempty"`
	EndKey                     *string  `protobuf:"bytes,5,opt,name=end_key" json:"end_key,omitempty"`
	EndInclusive               *bool    `protobuf:"varint,6,opt,name=end_inclusive" json:"end_inclusive,omitempty"`
	StartPostfixValue          []string `protobuf:"bytes,22,rep,name=start_postfix_value" json:"start_postfix_value,omitempty"`
	EndPostfixValue            []string `protobuf:"bytes,23,rep,name=end_postfix_value" json:"end_postfix_value,omitempty"`
	EndUnappliedLogTimestampUs *int64   `protobuf:"varint,19,opt,name=end_unapplied_log_timestamp_us" json:"end_unapplied_log_timestamp_us,omitempty"`
	XXXUnrecognized            []byte   `json:"-"`
}

func (m *CompiledQueryPrimaryScan) Reset()         { *m = CompiledQueryPrimaryScan{} }
func (m *CompiledQueryPrimaryScan) String() string { return proto.CompactTextString(m) }
func (*CompiledQueryPrimaryScan) ProtoMessage()    {}

func (m *CompiledQueryPrimaryScan) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *CompiledQueryPrimaryScan) GetStartKey() string {
	if m != nil && m.StartKey != nil {
		return *m.StartKey
	}
	return ""
}

func (m *CompiledQueryPrimaryScan) GetStartInclusive() bool {
	if m != nil && m.StartInclusive != nil {
		return *m.StartInclusive
	}
	return false
}

func (m *CompiledQueryPrimaryScan) GetEndKey() string {
	if m != nil && m.EndKey != nil {
		return *m.EndKey
	}
	return ""
}

func (m *CompiledQueryPrimaryScan) GetEndInclusive() bool {
	if m != nil && m.EndInclusive != nil {
		return *m.EndInclusive
	}
	return false
}

func (m *CompiledQueryPrimaryScan) GetStartPostfixValue() []string {
	if m != nil {
		return m.StartPostfixValue
	}
	return nil
}

func (m *CompiledQueryPrimaryScan) GetEndPostfixValue() []string {
	if m != nil {
		return m.EndPostfixValue
	}
	return nil
}

func (m *CompiledQueryPrimaryScan) GetEndUnappliedLogTimestampUs() int64 {
	if m != nil && m.EndUnappliedLogTimestampUs != nil {
		return *m.EndUnappliedLogTimestampUs
	}
	return 0
}

type CompiledQueryMergeJoinScan struct {
	IndexName       *string  `protobuf:"bytes,8,req,name=index_name" json:"index_name,omitempty"`
	PrefixValue     []string `protobuf:"bytes,9,rep,name=prefix_value" json:"prefix_value,omitempty"`
	ValuePrefix     *bool    `protobuf:"varint,20,opt,name=value_prefix,def=0" json:"value_prefix,omitempty"`
	XXXUnrecognized []byte   `json:"-"`
}

func (m *CompiledQueryMergeJoinScan) Reset()         { *m = CompiledQueryMergeJoinScan{} }
func (m *CompiledQueryMergeJoinScan) String() string { return proto.CompactTextString(m) }
func (*CompiledQueryMergeJoinScan) ProtoMessage()    {}

const DefaultCompiledQueryMergeJoinScanValuePrefix bool = false

func (m *CompiledQueryMergeJoinScan) GetIndexName() string {
	if m != nil && m.IndexName != nil {
		return *m.IndexName
	}
	return ""
}

func (m *CompiledQueryMergeJoinScan) GetPrefixValue() []string {
	if m != nil {
		return m.PrefixValue
	}
	return nil
}

func (m *CompiledQueryMergeJoinScan) GetValuePrefix() bool {
	if m != nil && m.ValuePrefix != nil {
		return *m.ValuePrefix
	}
	return DefaultCompiledQueryMergeJoinScanValuePrefix
}

type CompiledQueryEntityFilter struct {
	Distinct        *bool      `protobuf:"varint,14,opt,name=distinct,def=0" json:"distinct,omitempty"`
	Kind            *string    `protobuf:"bytes,17,opt,name=kind" json:"kind,omitempty"`
	Ancestor        *Reference `protobuf:"bytes,18,opt,name=ancestor" json:"ancestor,omitempty"`
	XXXUnrecognized []byte     `json:"-"`
}

func (m *CompiledQueryEntityFilter) Reset()         { *m = CompiledQueryEntityFilter{} }
func (m *CompiledQueryEntityFilter) String() string { return proto.CompactTextString(m) }
func (*CompiledQueryEntityFilter) ProtoMessage()    {}

const DefaultCompiledQueryEntityFilterDistinct bool = false

func (m *CompiledQueryEntityFilter) GetDistinct() bool {
	if m != nil && m.Distinct != nil {
		return *m.Distinct
	}
	return DefaultCompiledQueryEntityFilterDistinct
}

func (m *CompiledQueryEntityFilter) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *CompiledQueryEntityFilter) GetAncestor() *Reference {
	if m != nil {
		return m.Ancestor
	}
	return nil
}

type CompiledCursor struct {
	Position        *CompiledCursorPosition `protobuf:"group,2,opt" json:"position,omitempty"`
	XXXUnrecognized []byte                  `json:"-"`
}

func (m *CompiledCursor) Reset()         { *m = CompiledCursor{} }
func (m *CompiledCursor) String() string { return proto.CompactTextString(m) }
func (*CompiledCursor) ProtoMessage()    {}

func (m *CompiledCursor) GetPosition() *CompiledCursorPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

type CompiledCursorPosition struct {
	StartKey        *string                             `protobuf:"bytes,27,opt,name=start_key" json:"start_key,omitempty"`
	Indexvalue      []*CompiledCursorPositionIndexValue `protobuf:"group,29,rep,name=IndexValue" json:"indexvalue,omitempty"`
	Key             *Reference                          `protobuf:"bytes,32,opt,name=key" json:"key,omitempty"`
	StartInclusive  *bool                               `protobuf:"varint,28,opt,name=start_inclusive,def=1" json:"start_inclusive,omitempty"`
	XXXUnrecognized []byte                              `json:"-"`
}

func (m *CompiledCursorPosition) Reset()         { *m = CompiledCursorPosition{} }
func (m *CompiledCursorPosition) String() string { return proto.CompactTextString(m) }
func (*CompiledCursorPosition) ProtoMessage()    {}

const DefaultCompiledCursorPositionStartInclusive bool = true

func (m *CompiledCursorPosition) GetStartKey() string {
	if m != nil && m.StartKey != nil {
		return *m.StartKey
	}
	return ""
}

func (m *CompiledCursorPosition) GetIndexvalue() []*CompiledCursorPositionIndexValue {
	if m != nil {
		return m.Indexvalue
	}
	return nil
}

func (m *CompiledCursorPosition) GetKey() *Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *CompiledCursorPosition) GetStartInclusive() bool {
	if m != nil && m.StartInclusive != nil {
		return *m.StartInclusive
	}
	return DefaultCompiledCursorPositionStartInclusive
}

type CompiledCursorPositionIndexValue struct {
	Property        *string        `protobuf:"bytes,30,opt,name=property" json:"property,omitempty"`
	Value           *PropertyValue `protobuf:"bytes,31,req,name=value" json:"value,omitempty"`
	XXXUnrecognized []byte         `json:"-"`
}

func (m *CompiledCursorPositionIndexValue) Reset()         { *m = CompiledCursorPositionIndexValue{} }
func (m *CompiledCursorPositionIndexValue) String() string { return proto.CompactTextString(m) }
func (*CompiledCursorPositionIndexValue) ProtoMessage()    {}

func (m *CompiledCursorPositionIndexValue) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CompiledCursorPositionIndexValue) GetValue() *PropertyValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type Cursor struct {
	Cursor          *uint64 `protobuf:"fixed64,1,req,name=cursor" json:"cursor,omitempty"`
	App             *string `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *Cursor) Reset()         { *m = Cursor{} }
func (m *Cursor) String() string { return proto.CompactTextString(m) }
func (*Cursor) ProtoMessage()    {}

func (m *Cursor) GetCursor() uint64 {
	if m != nil && m.Cursor != nil {
		return *m.Cursor
	}
	return 0
}

func (m *Cursor) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

type Error struct {
	XXXUnrecognized []byte `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}

type Cost struct {
	IndexWrites             *int32          `protobuf:"varint,1,opt,name=index_writes" json:"index_writes,omitempty"`
	IndexWriteBytes         *int32          `protobuf:"varint,2,opt,name=index_write_bytes" json:"index_write_bytes,omitempty"`
	EntityWrites            *int32          `protobuf:"varint,3,opt,name=entity_writes" json:"entity_writes,omitempty"`
	EntityWriteBytes        *int32          `protobuf:"varint,4,opt,name=entity_write_bytes" json:"entity_write_bytes,omitempty"`
	Commitcost              *CostCommitCost `protobuf:"group,5,opt,name=CommitCost" json:"commitcost,omitempty"`
	ApproximateStorageDelta *int32          `protobuf:"varint,8,opt,name=approximate_storage_delta" json:"approximate_storage_delta,omitempty"`
	IDSequenceUpdates       *int32          `protobuf:"varint,9,opt,name=id_sequence_updates" json:"id_sequence_updates,omitempty"`
	XXXUnrecognized         []byte          `json:"-"`
}

func (m *Cost) Reset()         { *m = Cost{} }
func (m *Cost) String() string { return proto.CompactTextString(m) }
func (*Cost) ProtoMessage()    {}

func (m *Cost) GetIndexWrites() int32 {
	if m != nil && m.IndexWrites != nil {
		return *m.IndexWrites
	}
	return 0
}

func (m *Cost) GetIndexWriteBytes() int32 {
	if m != nil && m.IndexWriteBytes != nil {
		return *m.IndexWriteBytes
	}
	return 0
}

func (m *Cost) GetEntityWrites() int32 {
	if m != nil && m.EntityWrites != nil {
		return *m.EntityWrites
	}
	return 0
}

func (m *Cost) GetEntityWriteBytes() int32 {
	if m != nil && m.EntityWriteBytes != nil {
		return *m.EntityWriteBytes
	}
	return 0
}

func (m *Cost) GetCommitcost() *CostCommitCost {
	if m != nil {
		return m.Commitcost
	}
	return nil
}

func (m *Cost) GetApproximateStorageDelta() int32 {
	if m != nil && m.ApproximateStorageDelta != nil {
		return *m.ApproximateStorageDelta
	}
	return 0
}

func (m *Cost) GetIDSequenceUpdates() int32 {
	if m != nil && m.IDSequenceUpdates != nil {
		return *m.IDSequenceUpdates
	}
	return 0
}

type CostCommitCost struct {
	RequestedEntityPuts    *int32 `protobuf:"varint,6,opt,name=requested_entity_puts" json:"requested_entity_puts,omitempty"`
	RequestedEntityDeletes *int32 `protobuf:"varint,7,opt,name=requested_entity_deletes" json:"requested_entity_deletes,omitempty"`
	XXXUnrecognized        []byte `json:"-"`
}

func (m *CostCommitCost) Reset()         { *m = CostCommitCost{} }
func (m *CostCommitCost) String() string { return proto.CompactTextString(m) }
func (*CostCommitCost) ProtoMessage()    {}

func (m *CostCommitCost) GetRequestedEntityPuts() int32 {
	if m != nil && m.RequestedEntityPuts != nil {
		return *m.RequestedEntityPuts
	}
	return 0
}

func (m *CostCommitCost) GetRequestedEntityDeletes() int32 {
	if m != nil && m.RequestedEntityDeletes != nil {
		return *m.RequestedEntityDeletes
	}
	return 0
}

type GetRequest struct {
	Header          *InternalHeader `protobuf:"bytes,6,opt,name=header" json:"header,omitempty"`
	Key             []*Reference    `protobuf:"bytes,1,rep,name=key" json:"key,omitempty"`
	Transaction     *Transaction    `protobuf:"bytes,2,opt,name=transaction" json:"transaction,omitempty"`
	FailoverMs      *int64          `protobuf:"varint,3,opt,name=failover_ms" json:"failover_ms,omitempty"`
	Strong          *bool           `protobuf:"varint,4,opt,name=strong" json:"strong,omitempty"`
	AllowDeferred   *bool           `protobuf:"varint,5,opt,name=allow_deferred,def=0" json:"allow_deferred,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}

const DefaultGetRequestAllowDeferred bool = false

func (m *GetRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GetRequest) GetKey() []*Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *GetRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *GetRequest) GetFailoverMs() int64 {
	if m != nil && m.FailoverMs != nil {
		return *m.FailoverMs
	}
	return 0
}

func (m *GetRequest) GetStrong() bool {
	if m != nil && m.Strong != nil {
		return *m.Strong
	}
	return false
}

func (m *GetRequest) GetAllowDeferred() bool {
	if m != nil && m.AllowDeferred != nil {
		return *m.AllowDeferred
	}
	return DefaultGetRequestAllowDeferred
}

type GetResponse struct {
	Entity          []*GetResponseEntity `protobuf:"group,1,rep" json:"entity,omitempty"`
	Deferred        []*Reference         `protobuf:"bytes,5,rep,name=deferred" json:"deferred,omitempty"`
	InOrder         *bool                `protobuf:"varint,6,opt,name=in_order,def=1" json:"in_order,omitempty"`
	XXXUnrecognized []byte               `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}

const DefaultGetResponseInOrder bool = true

func (m *GetResponse) GetEntity() []*GetResponseEntity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *GetResponse) GetDeferred() []*Reference {
	if m != nil {
		return m.Deferred
	}
	return nil
}

func (m *GetResponse) GetInOrder() bool {
	if m != nil && m.InOrder != nil {
		return *m.InOrder
	}
	return DefaultGetResponseInOrder
}

type GetResponseEntity struct {
	Entity          *EntityProto `protobuf:"bytes,2,opt,name=entity" json:"entity,omitempty"`
	Key             *Reference   `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Version         *int64       `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	XXXUnrecognized []byte       `json:"-"`
}

func (m *GetResponseEntity) Reset()         { *m = GetResponseEntity{} }
func (m *GetResponseEntity) String() string { return proto.CompactTextString(m) }
func (*GetResponseEntity) ProtoMessage()    {}

func (m *GetResponseEntity) GetEntity() *EntityProto {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *GetResponseEntity) GetKey() *Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *GetResponseEntity) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type PutRequest struct {
	Header          *InternalHeader         `protobuf:"bytes,11,opt,name=header" json:"header,omitempty"`
	Entity          []*EntityProto          `protobuf:"bytes,1,rep,name=entity" json:"entity,omitempty"`
	Transaction     *Transaction            `protobuf:"bytes,2,opt,name=transaction" json:"transaction,omitempty"`
	CompositeIndex  []*CompositeIndex       `protobuf:"bytes,3,rep,name=composite_index" json:"composite_index,omitempty"`
	Trusted         *bool                   `protobuf:"varint,4,opt,name=trusted,def=0" json:"trusted,omitempty"`
	Force           *bool                   `protobuf:"varint,7,opt,name=force,def=0" json:"force,omitempty"`
	MarkChanges     *bool                   `protobuf:"varint,8,opt,name=mark_changes,def=0" json:"mark_changes,omitempty"`
	Snapshot        []*Snapshot             `protobuf:"bytes,9,rep,name=snapshot" json:"snapshot,omitempty"`
	AutoIDPolicy    *PutRequestAutoIDPolicy `protobuf:"varint,10,opt,name=auto_id_policy,enum=appengine.PutRequest_AutoIdPolicy,def=0" json:"auto_id_policy,omitempty"`
	XXXUnrecognized []byte                  `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}

const DefaultPutRequestTrusted bool = false
const DefaultPutRequestForce bool = false
const DefaultPutRequestMarkChanges bool = false
const DefaultPutRequestAutoIDPolicy PutRequestAutoIDPolicy = PutRequestCURRENT

func (m *PutRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PutRequest) GetEntity() []*EntityProto {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (m *PutRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *PutRequest) GetCompositeIndex() []*CompositeIndex {
	if m != nil {
		return m.CompositeIndex
	}
	return nil
}

func (m *PutRequest) GetTrusted() bool {
	if m != nil && m.Trusted != nil {
		return *m.Trusted
	}
	return DefaultPutRequestTrusted
}

func (m *PutRequest) GetForce() bool {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return DefaultPutRequestForce
}

func (m *PutRequest) GetMarkChanges() bool {
	if m != nil && m.MarkChanges != nil {
		return *m.MarkChanges
	}
	return DefaultPutRequestMarkChanges
}

func (m *PutRequest) GetSnapshot() []*Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *PutRequest) GetAutoIDPolicy() PutRequestAutoIDPolicy {
	if m != nil && m.AutoIDPolicy != nil {
		return *m.AutoIDPolicy
	}
	return DefaultPutRequestAutoIDPolicy
}

type PutResponse struct {
	Key             []*Reference `protobuf:"bytes,1,rep,name=key" json:"key,omitempty"`
	Cost            *Cost        `protobuf:"bytes,2,opt,name=cost" json:"cost,omitempty"`
	Version         []int64      `protobuf:"varint,3,rep,name=version" json:"version,omitempty"`
	XXXUnrecognized []byte       `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}

func (m *PutResponse) GetKey() []*Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PutResponse) GetCost() *Cost {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *PutResponse) GetVersion() []int64 {
	if m != nil {
		return m.Version
	}
	return nil
}

type TouchRequest struct {
	Header          *InternalHeader   `protobuf:"bytes,10,opt,name=header" json:"header,omitempty"`
	Key             []*Reference      `protobuf:"bytes,1,rep,name=key" json:"key,omitempty"`
	CompositeIndex  []*CompositeIndex `protobuf:"bytes,2,rep,name=composite_index" json:"composite_index,omitempty"`
	Force           *bool             `protobuf:"varint,3,opt,name=force,def=0" json:"force,omitempty"`
	Snapshot        []*Snapshot       `protobuf:"bytes,9,rep,name=snapshot" json:"snapshot,omitempty"`
	XXXUnrecognized []byte            `json:"-"`
}

func (m *TouchRequest) Reset()         { *m = TouchRequest{} }
func (m *TouchRequest) String() string { return proto.CompactTextString(m) }
func (*TouchRequest) ProtoMessage()    {}

const DefaultTouchRequestForce bool = false

func (m *TouchRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TouchRequest) GetKey() []*Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TouchRequest) GetCompositeIndex() []*CompositeIndex {
	if m != nil {
		return m.CompositeIndex
	}
	return nil
}

func (m *TouchRequest) GetForce() bool {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return DefaultTouchRequestForce
}

func (m *TouchRequest) GetSnapshot() []*Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

type TouchResponse struct {
	Cost            *Cost  `protobuf:"bytes,1,opt,name=cost" json:"cost,omitempty"`
	XXXUnrecognized []byte `json:"-"`
}

func (m *TouchResponse) Reset()         { *m = TouchResponse{} }
func (m *TouchResponse) String() string { return proto.CompactTextString(m) }
func (*TouchResponse) ProtoMessage()    {}

func (m *TouchResponse) GetCost() *Cost {
	if m != nil {
		return m.Cost
	}
	return nil
}

type DeleteRequest struct {
	Header          *InternalHeader `protobuf:"bytes,10,opt,name=header" json:"header,omitempty"`
	Key             []*Reference    `protobuf:"bytes,6,rep,name=key" json:"key,omitempty"`
	Transaction     *Transaction    `protobuf:"bytes,5,opt,name=transaction" json:"transaction,omitempty"`
	Trusted         *bool           `protobuf:"varint,4,opt,name=trusted,def=0" json:"trusted,omitempty"`
	Force           *bool           `protobuf:"varint,7,opt,name=force,def=0" json:"force,omitempty"`
	MarkChanges     *bool           `protobuf:"varint,8,opt,name=mark_changes,def=0" json:"mark_changes,omitempty"`
	Snapshot        []*Snapshot     `protobuf:"bytes,9,rep,name=snapshot" json:"snapshot,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}

const DefaultDeleteRequestTrusted bool = false
const DefaultDeleteRequestForce bool = false
const DefaultDeleteRequestMarkChanges bool = false

func (m *DeleteRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DeleteRequest) GetKey() []*Reference {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *DeleteRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *DeleteRequest) GetTrusted() bool {
	if m != nil && m.Trusted != nil {
		return *m.Trusted
	}
	return DefaultDeleteRequestTrusted
}

func (m *DeleteRequest) GetForce() bool {
	if m != nil && m.Force != nil {
		return *m.Force
	}
	return DefaultDeleteRequestForce
}

func (m *DeleteRequest) GetMarkChanges() bool {
	if m != nil && m.MarkChanges != nil {
		return *m.MarkChanges
	}
	return DefaultDeleteRequestMarkChanges
}

func (m *DeleteRequest) GetSnapshot() []*Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

type DeleteResponse struct {
	Cost            *Cost   `protobuf:"bytes,1,opt,name=cost" json:"cost,omitempty"`
	Version         []int64 `protobuf:"varint,3,rep,name=version" json:"version,omitempty"`
	XXXUnrecognized []byte  `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}

func (m *DeleteResponse) GetCost() *Cost {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *DeleteResponse) GetVersion() []int64 {
	if m != nil {
		return m.Version
	}
	return nil
}

type NextRequest struct {
	Header          *InternalHeader `protobuf:"bytes,5,opt,name=header" json:"header,omitempty"`
	Cursor          *Cursor         `protobuf:"bytes,1,req,name=cursor" json:"cursor,omitempty"`
	Count           *int32          `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Offset          *int32          `protobuf:"varint,4,opt,name=offset,def=0" json:"offset,omitempty"`
	Compile         *bool           `protobuf:"varint,3,opt,name=compile,def=0" json:"compile,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *NextRequest) Reset()         { *m = NextRequest{} }
func (m *NextRequest) String() string { return proto.CompactTextString(m) }
func (*NextRequest) ProtoMessage()    {}

const DefaultNextRequestOffset int32 = 0
const DefaultNextRequestCompile bool = false

func (m *NextRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NextRequest) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (m *NextRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *NextRequest) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return DefaultNextRequestOffset
}

func (m *NextRequest) GetCompile() bool {
	if m != nil && m.Compile != nil {
		return *m.Compile
	}
	return DefaultNextRequestCompile
}

type QueryResult struct {
	Cursor          *Cursor           `protobuf:"bytes,1,opt,name=cursor" json:"cursor,omitempty"`
	Result          []*EntityProto    `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	SkippedResults  *int32            `protobuf:"varint,7,opt,name=skipped_results" json:"skipped_results,omitempty"`
	MoreResults     *bool             `protobuf:"varint,3,req,name=more_results" json:"more_results,omitempty"`
	KeysOnly        *bool             `protobuf:"varint,4,opt,name=keys_only" json:"keys_only,omitempty"`
	IndexOnly       *bool             `protobuf:"varint,9,opt,name=index_only" json:"index_only,omitempty"`
	SmallOps        *bool             `protobuf:"varint,10,opt,name=small_ops" json:"small_ops,omitempty"`
	CompiledQuery   *CompiledQuery    `protobuf:"bytes,5,opt,name=compiled_query" json:"compiled_query,omitempty"`
	CompiledCursor  *CompiledCursor   `protobuf:"bytes,6,opt,name=compiled_cursor" json:"compiled_cursor,omitempty"`
	Index           []*CompositeIndex `protobuf:"bytes,8,rep,name=index" json:"index,omitempty"`
	Version         []int64           `protobuf:"varint,11,rep,name=version" json:"version,omitempty"`
	XXXUnrecognized []byte            `json:"-"`
}

func (m *QueryResult) Reset()         { *m = QueryResult{} }
func (m *QueryResult) String() string { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()    {}

func (m *QueryResult) GetCursor() *Cursor {
	if m != nil {
		return m.Cursor
	}
	return nil
}

func (m *QueryResult) GetResult() []*EntityProto {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *QueryResult) GetSkippedResults() int32 {
	if m != nil && m.SkippedResults != nil {
		return *m.SkippedResults
	}
	return 0
}

func (m *QueryResult) GetMoreResults() bool {
	if m != nil && m.MoreResults != nil {
		return *m.MoreResults
	}
	return false
}

func (m *QueryResult) GetKeysOnly() bool {
	if m != nil && m.KeysOnly != nil {
		return *m.KeysOnly
	}
	return false
}

func (m *QueryResult) GetIndexOnly() bool {
	if m != nil && m.IndexOnly != nil {
		return *m.IndexOnly
	}
	return false
}

func (m *QueryResult) GetSmallOps() bool {
	if m != nil && m.SmallOps != nil {
		return *m.SmallOps
	}
	return false
}

func (m *QueryResult) GetCompiledQuery() *CompiledQuery {
	if m != nil {
		return m.CompiledQuery
	}
	return nil
}

func (m *QueryResult) GetCompiledCursor() *CompiledCursor {
	if m != nil {
		return m.CompiledCursor
	}
	return nil
}

func (m *QueryResult) GetIndex() []*CompositeIndex {
	if m != nil {
		return m.Index
	}
	return nil
}

func (m *QueryResult) GetVersion() []int64 {
	if m != nil {
		return m.Version
	}
	return nil
}

type AllocateIdsRequest struct {
	Header          *InternalHeader `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	ModelKey        *Reference      `protobuf:"bytes,1,opt,name=model_key" json:"model_key,omitempty"`
	Size            *int64          `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Max             *int64          `protobuf:"varint,3,opt,name=max" json:"max,omitempty"`
	Reserve         []*Reference    `protobuf:"bytes,5,rep,name=reserve" json:"reserve,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *AllocateIdsRequest) Reset()         { *m = AllocateIdsRequest{} }
func (m *AllocateIdsRequest) String() string { return proto.CompactTextString(m) }
func (*AllocateIdsRequest) ProtoMessage()    {}

func (m *AllocateIdsRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AllocateIdsRequest) GetModelKey() *Reference {
	if m != nil {
		return m.ModelKey
	}
	return nil
}

func (m *AllocateIdsRequest) GetSize() int64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *AllocateIdsRequest) GetMax() int64 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return 0
}

func (m *AllocateIdsRequest) GetReserve() []*Reference {
	if m != nil {
		return m.Reserve
	}
	return nil
}

type AllocateIdsResponse struct {
	Start           *int64 `protobuf:"varint,1,req,name=start" json:"start,omitempty"`
	End             *int64 `protobuf:"varint,2,req,name=end" json:"end,omitempty"`
	Cost            *Cost  `protobuf:"bytes,3,opt,name=cost" json:"cost,omitempty"`
	XXXUnrecognized []byte `json:"-"`
}

func (m *AllocateIdsResponse) Reset()         { *m = AllocateIdsResponse{} }
func (m *AllocateIdsResponse) String() string { return proto.CompactTextString(m) }
func (*AllocateIdsResponse) ProtoMessage()    {}

func (m *AllocateIdsResponse) GetStart() int64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *AllocateIdsResponse) GetEnd() int64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

func (m *AllocateIdsResponse) GetCost() *Cost {
	if m != nil {
		return m.Cost
	}
	return nil
}

type CompositeIndices struct {
	Index           []*CompositeIndex `protobuf:"bytes,1,rep,name=index" json:"index,omitempty"`
	XXXUnrecognized []byte            `json:"-"`
}

func (m *CompositeIndices) Reset()         { *m = CompositeIndices{} }
func (m *CompositeIndices) String() string { return proto.CompactTextString(m) }
func (*CompositeIndices) ProtoMessage()    {}

func (m *CompositeIndices) GetIndex() []*CompositeIndex {
	if m != nil {
		return m.Index
	}
	return nil
}

type AddActionsRequest struct {
	Header          *InternalHeader `protobuf:"bytes,3,opt,name=header" json:"header,omitempty"`
	Transaction     *Transaction    `protobuf:"bytes,1,req,name=transaction" json:"transaction,omitempty"`
	Action          []*Action       `protobuf:"bytes,2,rep,name=action" json:"action,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *AddActionsRequest) Reset()         { *m = AddActionsRequest{} }
func (m *AddActionsRequest) String() string { return proto.CompactTextString(m) }
func (*AddActionsRequest) ProtoMessage()    {}

func (m *AddActionsRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AddActionsRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *AddActionsRequest) GetAction() []*Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type AddActionsResponse struct {
	XXXUnrecognized []byte `json:"-"`
}

func (m *AddActionsResponse) Reset()         { *m = AddActionsResponse{} }
func (m *AddActionsResponse) String() string { return proto.CompactTextString(m) }
func (*AddActionsResponse) ProtoMessage()    {}

type BeginTransactionRequest struct {
	Header          *InternalHeader `protobuf:"bytes,3,opt,name=header" json:"header,omitempty"`
	App             *string         `protobuf:"bytes,1,req,name=app" json:"app,omitempty"`
	AllowMultipleEg *bool           `protobuf:"varint,2,opt,name=allow_multiple_eg,def=0" json:"allow_multiple_eg,omitempty"`
	XXXUnrecognized []byte          `json:"-"`
}

func (m *BeginTransactionRequest) Reset()         { *m = BeginTransactionRequest{} }
func (m *BeginTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*BeginTransactionRequest) ProtoMessage()    {}

const DefaultBeginTransactionRequestAllowMultipleEg bool = false

func (m *BeginTransactionRequest) GetHeader() *InternalHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BeginTransactionRequest) GetApp() string {
	if m != nil && m.App != nil {
		return *m.App
	}
	return ""
}

func (m *BeginTransactionRequest) GetAllowMultipleEg() bool {
	if m != nil && m.AllowMultipleEg != nil {
		return *m.AllowMultipleEg
	}
	return DefaultBeginTransactionRequestAllowMultipleEg
}

type CommitResponse struct {
	Cost            *Cost                    `protobuf:"bytes,1,opt,name=cost" json:"cost,omitempty"`
	Version         []*CommitResponseVersion `protobuf:"group,3,rep" json:"version,omitempty"`
	XXXUnrecognized []byte                   `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}

func (m *CommitResponse) GetCost() *Cost {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *CommitResponse) GetVersion() []*CommitResponseVersion {
	if m != nil {
		return m.Version
	}
	return nil
}

type CommitResponseVersion struct {
	RootEntityKey   *Reference `protobuf:"bytes,4,req,name=root_entity_key" json:"root_entity_key,omitempty"`
	Version         *int64     `protobuf:"varint,5,req,name=version" json:"version,omitempty"`
	XXXUnrecognized []byte     `json:"-"`
}

func (m *CommitResponseVersion) Reset()         { *m = CommitResponseVersion{} }
func (m *CommitResponseVersion) String() string { return proto.CompactTextString(m) }
func (*CommitResponseVersion) ProtoMessage()    {}

func (m *CommitResponseVersion) GetRootEntityKey() *Reference {
	if m != nil {
		return m.RootEntityKey
	}
	return nil
}

func (m *CommitResponseVersion) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func init() {
}
